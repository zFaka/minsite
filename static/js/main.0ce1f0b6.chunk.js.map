{"version":3,"sources":["components/sections/BioSection.js","components/screens/bio/sections/BioScreenSection1.js","components/screens/bio/sections/BioScreenSection2.js","components/screens/projects/ProjectsScreen.js","components/sections/ProjectsSection.js","components/FullpageTemplate.js","App.js","index.js"],"names":["BioSection","useState","isOpen","setIsOpen","size","setSize","className","onClick","style","marginTop","BioScreenSection1","marginBottom","cursor","BioScreenSection2","isOpen1","setIsOpen1","isOpen2","setIsOpen2","items","id","title","url","ProjectsScreen","render","state","fullpageApi","Wrapper","backgroundColor","display","showArrows","map","item","href","target","rel","ProjectsSection","FullpageTemplate","navigation","anchors","scrollingSpeed","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0ce1f0b6.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport ReactCollapseSimple from \"react-collapse-simple\";\n\n\nexport const BioSection = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [size, setSize] = useState();\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n    if(isOpen === false)\n    {setSize('hide')} else {setSize('showTitle')}\n  };\n\n  return (\n    <>\n      <h1 \n        className={`wow-at-first-sight del-style ${size}`}\n        onClick={() => handleClick()}>\n        FAKA\n      </h1>\n\n\n\n      <ReactCollapseSimple isOpen={isOpen}>\n        <div className='center'>\n          <p className='bio-p' style={{marginTop:'0'}}>                \n            Focused on <strong>growing</strong> your business\n          </p>\n          <p className='bio-p bio-mind 'style={{marginTop:'5px'}}>\n            Technically minded, <strong>stoic</strong>, and <i>creative</i>\n          </p>\n          <p className='bio-p' style={{marginTop:'5px'}}>                \n            NI's Philosophy practitioner\n          </p>\n        </div>\n      </ReactCollapseSimple>\n    </>\n  )\n}\n","import {useState} from \"react\";\nimport ReactCollapseSimple from \"react-collapse-simple\";\n\nexport const BioScreenSection1 = () => {\n  const [isOpen, setIsOpen] = useState(true);\n  return(\n    <>\n      <div className='center'>\n\n        <h2 className='bio-clps' style={{marginBottom:'30px', cursor:'pointer'}} onClick={() => setIsOpen(!isOpen)}>Web Dev</h2>\n\n        <ReactCollapseSimple isOpen={isOpen}>\n        <p className='bio-p bio-app' style={{marginTop:'10px'}}>                \n          Creator of <strong>Aday</strong>, an interactive habit app\n        </p>\n\n        <p className='bio-p' style={{marginTop:'10px'}}>                \n          Dev for <strong>Increase</strong> your customers\n        </p>\n\n        <p className='bio-p' style={{marginTop:'10px'}}>                \n          Working as <strong>IT Consultant</strong> \n        </p>\n        </ReactCollapseSimple>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport {useState} from 'react';\nimport ReactCollapseSimple from 'react-collapse-simple';\n\n\nexport const BioScreenSection2 = () => {\n\n\n  const [isOpen1, setIsOpen1] = useState(true);\n  const [isOpen2, setIsOpen2] = useState(false);\n\n  return(\n    <>\n      <div className='center'>\n        <p className='bio-clps wow-at-third-sight' onClick={() => {setIsOpen1(!isOpen1); setIsOpen2(false)}} style={{cursor:'pointer'}}> \n          <strong>Frontend</strong>\n        </p>\n\n        <ReactCollapseSimple isOpen={isOpen1}>\n          <p className='bio-p' >React, Redux, Typescript, UI, UX, </p>\n          <p className='bio-p' >Figma, Sass, Flexbox, FullpageJS</p>\n        </ReactCollapseSimple>\n\n        <p className='bio-clps wow-at-third-sight' style={{marginTop:'10vh', cursor:'pointer'}} onClick={() => {setIsOpen2(!isOpen2); setIsOpen1(false)}}>                \n          <strong>Backend</strong>\n        </p>\n        <ReactCollapseSimple isOpen={isOpen2}>\n        <p className='bio-p' >MongoDB, PostgresDB, NodeJS,</p>\n        <p className='bio-p' >Docker, Heroku, Firebase,</p>\n        <p className='bio-p' >Netlify, Linux</p>\n        </ReactCollapseSimple>\n\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport Carousel from 'react-elastic-carousel';\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nconst state = {\n  items: [\n    {id: 1, title: 'Calendar Events', url:'https://www.w3schools.com'},\n    {id: 2, title: 'Face Recognition', url:'https://www.google.com'},\n    {id: 3, title: 'Systems Tracker', url:'https://www.twitter.com'},\n    {id: 4, title: 'Youtube Focus', url:'https://www.facebook.com'},\n    {id: 5, title: 'Blog', url:'https://www.reddit.com'}, \n  ]\n}\n\nconst { items } = state;\n\n\nexport const ProjectsScreen = () => (\n  <ReactFullpage\n    render={({ state, fullpageApi }) => {\n      return (\n        <ReactFullpage.Wrapper>\n          <div className=\"section bc-section\" style={{backgroundColor:'black'}}>\n            <Carousel display='flex' showArrows={false}>\n              {items.map(item => <div key={item.id}>\n                <a href={item.url} target=\"_blank\" rel=\"noreferrer\" className='del-style'>\n                    {item.title}\n                </a>\n              </div>)}\n            </Carousel>\n          </div>\n        </ReactFullpage.Wrapper>\n      );\n    }}\n  />\n);\n","import React, {useState} from 'react';\nimport ReactCollapseSimple from 'react-collapse-simple';\nimport {ProjectsScreen} from '../screens/projects/ProjectsScreen';\n\nexport const ProjectsSection = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [size, setSize] = useState();\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n    if(isOpen === false)\n    {setSize('hide')} else {setSize('show')}\n  };\n  return (\n    <>\n      <h1 \n        className={`wow-at-second-sight del-style ${size}`}\n        onClick={() => handleClick()}>\n        Projects \n      </h1> \n\n\n\n      <ReactCollapseSimple isOpen={isOpen}>\n        <ProjectsScreen/>\n      </ReactCollapseSimple>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport {BioSection} from './sections/BioSection';\nimport {BioScreenSection1} from './screens/bio/sections/BioScreenSection1';\nimport {BioScreenSection2} from './screens/bio/sections/BioScreenSection2';\nimport {ProjectsSection} from './sections/ProjectsSection';\n\nexport const FullpageTemplate = () => (\n  <ReactFullpage\n    navigation\n    anchors={['section1', 'section2', 'section3', 'section4']}\n    scrollingSpeed = {500} /* Options here */\n\n    render={({ state, fullpageApi }) => {\n      return (\n        <ReactFullpage.Wrapper>\n          <div className=\"section bc-section\">\n            <BioSection/>\n          </div>\n          <div className=\"section bc-section\">\n            <BioScreenSection1/>\n          </div>\n          <div className=\"section bc-section\">\n            <BioScreenSection2/>\n          </div>\n          <div className=\"section bc-section\">\n            <ProjectsSection/>\n          </div>\n\n\n\n          {/*\n          <div className=\"section bc-section\">\n            <BlogSection/>\n          </div>\n          */}\n        </ReactFullpage.Wrapper>\n      );\n    }}\n  />\n);\n","import {FullpageTemplate} from './components/FullpageTemplate';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <FullpageTemplate/>\n      </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}